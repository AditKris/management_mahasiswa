<!DOCTYPE html>
<html>
  <head>
    <title>Daftar Tugas</title>
    <link rel="stylesheet" type="text/css" href="/css/style.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
  </head>
  <body>
    <div class="container mt-4">
      <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
        <a class="navbar-brand" href="#">Management Tugas</a>
        <div class="collapse navbar-collapse" id="navbarNav">
          <ul class="navbar-nav ml-auto">
            <li class="nav-item">
              <span class="nav-link">Masuk Sebagai: <%= user.username %></span>
            </li>
            <li class="nav-item">
              <form action="/logout" method="POST" style="display: inline;">
                <button type="submit" class="btn btn-link nav-link" style="padding: 0; border: none; background: none; color: #f4f4f4;">Logout</button>
              </form>
            </li>
          </ul>
        </div>
      </nav>
      <h2>Daftar Tugas</h2>

      <label for="kategori">Filter berdasarkan kategori:</label>
      <select id="kategori" class="form-control mb-3" onchange="filterTugas()">
        <option value="Semua">Semua</option>
        <option value="Kuliah">Kuliah</option>
        <option value="Pribadi">Pribadi</option>
        <option value="Organisasi">Organisasi</option>
      </select>

      <table id="tugasTable" class="table table-striped mt-3">
        <thead>
          <tr>
            <th>Nama Tugas</th>
            <th>Deskripsi</th>
            <th>Deadline</th>
            <th>Kategori</th>
            <th>Status</th>
            <th>Aksi</th>
          </tr>
        </thead>
        <tbody>
          <% tugas.forEach(t => { %>
          <tr>
            <td><%= t.nama_tugas %></td>
            <td><%= t.deskripsi %></td>
            <td><%= new Date(t.tanggal_deadline).toLocaleDateString() %></td>
            <td><%= t.kategori %></td>
            <td><%= t.status %></td>
            <td class="actions">
              <div>
                <a href="/tugas/edit/<%= t._id %>" class="btn btn-success btn-sm">Edit</a>
                <a href="/tugas/hapus/<%= t._id %>" class="btn btn-danger btn-sm">Hapus</a>
              </div>
            </td>
          </tr>
          <% }) %>
        </tbody>
      </table>

      <button onclick="showAddTaskForm()" class="btn btn-primary">Tambah Tugas</button>

      <div id="addTaskForm" style="display: none;" class="mt-4">
        <h3>Tambah Tugas</h3>
        <form id="taskForm">
          <div class="form-group">
            <label for="nama_tugas">Nama Tugas:</label>
            <input type="text" class="form-control" id="nama_tugas" name="nama_tugas" required>
          </div>
          <div class="form-group">
            <label for="deskripsi">Deskripsi:</label>
            <textarea class="form-control" id="deskripsi" name="deskripsi" required></textarea>
          </div>
          <div class="form-group">
            <label for="tanggal_deadline">Tanggal Deadline:</label>
            <input type="date" class="form-control" id="tanggal_deadline" name="tanggal_deadline" required>
          </div>
          <div class="form-group">
            <label for="status">Status:</label>
            <input type="text" class="form-control" id="status" name="status" required>
          </div>
          <div class="form-group">
            <label for="kategori">Kategori:</label>
            <input type="text" class="form-control" id="kategori" name="kategori" required>
          </div>
          <button type="submit" class="btn btn-primary">Tambah</button>
        </form>
      </div>

      <div id="notification" class="notification"></div>
    </div>

    <script>
      function showAddTaskForm() {
        document.getElementById('addTaskForm').style.display = 'block';
      }

      document.getElementById('taskForm').addEventListener('submit', function(event) {
        event.preventDefault();
        const formData = new FormData(event.target);
        const xhr = new XMLHttpRequest();
        xhr.open('POST', '/tugas/simpan', true);
        xhr.setRequestHeader('Content-Type', 'application/json;charset=UTF-8');
        xhr.onload = function() {
          if (xhr.status === 201) {
            const response = JSON.parse(xhr.responseText);
            const notification = document.getElementById('notification');
            notification.innerText = response.message;
            notification.style.display = 'block';
            setTimeout(() => {
              notification.style.display = 'none';
            }, 5000);
            event.target.reset();
            document.getElementById('addTaskForm').style.display = 'none';
          } else {
            alert('Error adding task');
          }
        };
        xhr.send(JSON.stringify(Object.fromEntries(formData.entries())));
      });

      function filterTugas() {
        const kategori = document.getElementById("kategori").value;
        const xhr = new XMLHttpRequest();
        xhr.open("GET", "/tugas/filter?kategori=" + (kategori === "Semua" ? "" : kategori), true);
        xhr.onload = function() {
          if (xhr.status === 200) {
            const tugas = JSON.parse(xhr.responseText);
            const table = document.getElementById("tugasTable").getElementsByTagName('tbody')[0];
            table.innerHTML = '';
            tugas.forEach(t => {
              const row = table.insertRow();
              row.innerHTML = `
                <td>${t.nama_tugas}</td>
                <td>${t.deskripsi}</td>
                <td>${new Date(t.tanggal_deadline).toLocaleDateString()}</td>
                <td>${t.kategori}</td>
                <td>${t.status}</td>
                <td class="actions">
                  <div>
                    <a href="/tugas/edit/${t._id}" class="btn btn-success btn-sm">Edit</a>
                    <a href="/tugas/hapus/${t._id}" class="btn btn-danger btn-sm">Hapus</a>
                  </div>
                </td>
              `;
            });
          }
        };
        xhr.send();
      }

      const ws = new WebSocket('ws://' + window.location.host);

      ws.onopen = function() {
        console.log('WebSocket connection established');
      };

      ws.onmessage = function(event) {
        console.log('WebSocket message received:', event.data);
        const data = JSON.parse(event.data);
        const notification = document.getElementById('notification');
        notification.innerText = data.message;
        notification.style.display = 'block';
        setTimeout(() => {
          notification.style.display = 'none';
        }, 5000);
      };

      ws.onerror = function(error) {
        console.error('WebSocket error:', error);
      };

      ws.onclose = function() {
        console.log('WebSocket connection closed');
      };
    </script>
  </body>
</html>